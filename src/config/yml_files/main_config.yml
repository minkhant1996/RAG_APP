ENVIRONMENT: null               # null for .env files. If you have .env.dev and .env.prod, then set the environment here

API:                             # API configuration
  prefix: /api/v1
  upload_pdf: /upload_pdf
  chatbot: /chatbot
  clear_conversation: /clear_conversation
  retrieve_conversation: /retrieve_conversation
  run_langchain_eval_qa: /run_langchain_eval_qa

TIMEZONE: Asia/Bangkok            # timezone for the system
    
PROMPT:
  trigger_words:                  # add more trigger words if required. also implement the logic in the code
    system_prompt: system_prompt
    input_prompt: input_prompt
  content_types:                   # add more content types if required. also implement the logic in the code
    - Research
  prompt_files:                    # add more prompt files if required
    image_summary: prompts/image_summary.txt
    refine_query: prompts/refine_query.txt
    find_titles: prompts/find_titles.txt
    intent_detection: prompts/intent_detection.txt
    chatbot_response: prompts/chatbot_response.txt
    evaluate_doc_extraction: prompts/evaluate_doc_extraction.txt                  

REDIS:
  key:
    prefix: MinKhant_               # prefix for the key
    sufix: _RAG                     # suffix for the key

User_Data_Local:
  user_data_path: /rag_volume/tmp   # path to store user data including faiss index, pdfs, etc.

RAG:
  vectors_store_type: faiss
  save_original_pdf: True
  save_split_text: False     # useful to check later for performance analysis or debugging
  text_split_methods:        # add more to the list if required to split the text in different ways
    - semantic_chunker     # if only one method is required, then replace the method here, e.g. - semantic_chunker, - recursive_character 
  retrieve:
    text_split_methods:
      - semantic_chunker
    retrieve_types: 
      - similarity  # "similarity", "mmr", "similarity_score_threshold" 

  embedding:
    embed_method: openai
    embed_model_name: text-embedding-3-small

CHAT_BOT:
  chat_history_length: 5